AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

Resources:
  register:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/auth/lambda/register.handler
      Runtime: nodejs8.10
      Policies: AWSLambdaFullAccess
      Events:
        GetApi:
          Type: Api
          Properties:
            Path: /register
            Method: put
            RestApiId: 
                Ref: LenkaAPI            

  login:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/auth/lambda/login.handler
      Runtime: nodejs8.10
      Policies: AWSLambdaFullAccess
      Timeout: 10
      Events:
        GetApi:
          Type: Api
          Properties:
            Path: /login
            Method: put  
            RestApiId: 
                Ref: LenkaAPI            

  getHello:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub getHello
      Handler: src/hello/lambda/getHello.handler
      Runtime: nodejs8.10
      Policies: AWSLambdaFullAccess
      Events:
        GetApi:
          Type: Api
          Properties:
            Path: /hello/{id}
            Method: get
            RestApiId: 
                Ref: LenkaAPI            

  putHello:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub putHello
      Handler: src/hello/lambda/putHello.handler
      Runtime: nodejs8.10
      Policies: AWSLambdaFullAccess
      Events:
        GetApi:
          Type: Api
          Properties:
            Path: /hello
            Method: put
            RestApiId: 
                Ref: LenkaAPI            
  
  LenkaAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: 2.0
        info:
          title: lenka
        securityDefinitions:
          lenkaCognito:
            type: apiKey
            name: Authorization
            in: header
            x-amazon-apigateway-authtype: cognito_user_pools
            x-amazon-apigateway-authorizer:
              providerARNs:
                - Fn::Sub: arn:aws:cognito-idp:ap-southeast-2:231751552761:userpool/ap-southeast-2_4lqtgN0Pw
              type: cognito_user_pools
  
        paths:
          /hello/{id}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: "POST"
                type: "aws_proxy"
                passthroughBehavior: "when_no_match"
                uri: 
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getHello.Arn}/invocations
              security:
                - lenkaCognito: []  
              responses: {}
          
          /hello:
            put:
              x-amazon-apigateway-integration:
                httpMethod: "POST"
                type: "aws_proxy"
                passthroughBehavior: "when_no_match"
                uri: 
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${putHello.Arn}/invocations
              security:
                - lenkaCognito: []  
              responses: {}
          
          /login:
            put:
              x-amazon-apigateway-integration:
                httpMethod: "POST"
                type: "aws_proxy"
                passthroughBehavior: "when_no_match"
                uri: 
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${login.Arn}/invocations
              responses: {}
          
          /register:
            put:
              x-amazon-apigateway-integration:
                httpMethod: "POST"
                type: "aws_proxy"
                passthroughBehavior: "when_no_match"
                uri: 
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${register.Arn}/invocations
              responses: {}

  lenkaTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub lenka
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
