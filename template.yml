AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31
- AWS::CodeStar

Parameters:
  ProjectId:
    Type: String
    Description: AWS CodeStar projectID used to associate new resources to team members

Resources:
  register:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/auth/lambda/register.handler
      Runtime: nodejs8.10
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /register
            Method: put            

  login:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/auth/lambda/login.handler
      Runtime: nodejs8.10
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /login
            Method: put  

  validate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/auth/lambda/validate.handler
      Runtime: nodejs8.10
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /validate
            Method: post              

  getHello:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub getHello
      Handler: src/hello/lambda/getHello.handler
      Runtime: nodejs8.10
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /hello/{id}
            Method: get

  putHello:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub putHello
      Handler: src/hello/lambda/putHello.handler
      Runtime: nodejs8.10
      Role:
        Fn::ImportValue:
          !Join ['-', [!Ref 'ProjectId', !Ref 'AWS::Region', 'LambdaTrustRole']]
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /hello
            Method: put
  
  lenkaTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: !Sub lenka
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  LenkaAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: 2.0
        info:
          title: lenka
        x-amazon-apigateway-binary-media-types:
          - '*/*'
        securitySchemes:
          lenkaCognito:
            type: apiKey
            name: Authorization
            in: header
            x-amazon-apigateway-authtype: cognito_user_pools
            x-amazon-apigateway-authorizer:
              type: cognito_user_pools
              providerARNs:
                - arn:aws:cognito-idp:ap-southeast-2:231751552761:userpool/ap-southeast-2_4lqtgN0Pw
        paths:
          /hello/{id}:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                uri: "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:231751552761:function:awscodestar-lenka-lambda-getHello-1GKNLR3SPTCCV/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
                credentials: !GetAtt GatewayExecutionRole.Arn
              security:
                - lenkaCognito: []  
          /hello:
            put:
              responses: {}
              x-amazon-apigateway-integration:
                uri: "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:231751552761:function:awscodestar-lenka-lambda-putHello-1244T94ZFIOQO/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
                credentials: !GetAtt GatewayExecutionRole.Arn          
              security:
                - lenkaCognito: []
          /login:
            put:
              x-amazon-apigateway-integration:
                uri: "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:231751552761:function:awscodestar-lenka-lambda-login-1LO20O0OWIJ2M/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
                credentials: !GetAtt GatewayExecutionRole.Arn
          /register:
            put:
              x-amazon-apigateway-integration:
                uri: "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:231751552761:function:awscodestar-lenka-lambda-register-1FLDP06AB3YFS/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
                credentials: !GetAtt GatewayExecutionRole.Arn